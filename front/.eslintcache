[{"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\index.js":"1","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\App.js":"2","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\reportWebVitals.js":"3","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\components\\Header.js":"4","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\actions\\users.actions.js":"5","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\rootReducer.js":"6","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Home.js":"7","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Login.js":"8","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\user.service.js":"9","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\partner.service.js":"10","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\Ressources.js":"11","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebArticles.js":"12","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\Events.js":"13","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebSites.js":"14","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\ScientificPublications.js":"15","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\web_article.service.js":"16","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\web_site.service.js":"17","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\scientific_publication.service.js":"18","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\event.service.js":"19","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\role.service.js":"20","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Partners\\Partner.js":"21","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Partners\\Partner_details.js":"22","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\MyTeam.js":"23","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\MyAccount.js":"24","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Member-details.js":"25","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebArticles_details.js":"26","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebSites_details.js":"27","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\ScientificPublications_details.js":"28","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\Events_details.js":"29","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\components\\Chart.js":"30","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\city.service.js":"31"},{"size":1131,"mtime":1612962550761,"results":"32","hashOfConfig":"33"},{"size":3343,"mtime":1612784003225,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":4097,"mtime":1614801345136,"results":"36","hashOfConfig":"33"},{"size":232,"mtime":1613050652843,"results":"37","hashOfConfig":"33"},{"size":348,"mtime":1613053884751,"results":"38","hashOfConfig":"33"},{"size":6316,"mtime":1613555627528,"results":"39","hashOfConfig":"33"},{"size":2424,"mtime":1613134592150,"results":"40","hashOfConfig":"33"},{"size":2200,"mtime":1613658716314,"results":"41","hashOfConfig":"33"},{"size":1715,"mtime":1613594334546,"results":"42","hashOfConfig":"33"},{"size":1454,"mtime":1611761024255,"results":"43","hashOfConfig":"33"},{"size":19379,"mtime":1614074810826,"results":"44","hashOfConfig":"33"},{"size":25212,"mtime":1614077396649,"results":"45","hashOfConfig":"33"},{"size":17898,"mtime":1614073107554,"results":"46","hashOfConfig":"33"},{"size":19795,"mtime":1614074850460,"results":"47","hashOfConfig":"33"},{"size":2027,"mtime":1614070836339,"results":"48","hashOfConfig":"33"},{"size":1999,"mtime":1613559021099,"results":"49","hashOfConfig":"33"},{"size":2056,"mtime":1613559048961,"results":"50","hashOfConfig":"33"},{"size":1982,"mtime":1613559073040,"results":"51","hashOfConfig":"33"},{"size":1300,"mtime":1613559039855,"results":"52","hashOfConfig":"33"},{"size":19713,"mtime":1613663612697,"results":"53","hashOfConfig":"33"},{"size":1338,"mtime":1613401426048,"results":"54","hashOfConfig":"33"},{"size":17719,"mtime":1613661713510,"results":"55","hashOfConfig":"33"},{"size":10289,"mtime":1613659200422,"results":"56","hashOfConfig":"33"},{"size":1877,"mtime":1611866427513,"results":"57","hashOfConfig":"33"},{"size":2136,"mtime":1611869362290,"results":"58","hashOfConfig":"33"},{"size":1933,"mtime":1611869347287,"results":"59","hashOfConfig":"33"},{"size":2252,"mtime":1613691451013,"results":"60","hashOfConfig":"33"},{"size":2098,"mtime":1611870466455,"results":"61","hashOfConfig":"33"},{"size":573,"mtime":1613638041085,"results":"62","hashOfConfig":"33"},{"size":566,"mtime":1613559077443,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1rntok9",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\index.js",[],["143","144"],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\App.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\reportWebVitals.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\components\\Header.js",["145","146","147","148"],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\actions\\users.actions.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\rootReducer.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Home.js",["149"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport UserService from \"../services/user.service\";\nimport Charts from \"../components/Chart\";\n\nclass Home extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n        }\n    }\n\n    async componentDidMount() {\n        let id = this.props.user;\n        try{\n            let response = await UserService.details(id);\n            let user = response.data.user;\n            this.setState({user: user});\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    render() {\n        let {user} = this.state;\n        return <div className=\"container-fluid\">\n            <div class=\"jumbotron jumbotron-fluid\">\n                <div class=\"container\">\n                    <h1 class=\"display-4\">Bienvenue {user.first_name}</h1>\n                </div>\n            </div>\n\n            {/**\n             * Charts */}\n                {/* Nombre de ressources */}\n                <Charts\n                    width={1200}\n                    heigth={300}\n                    chartType={\"PieChart\"}\n                    data={[                          \n                        ['Ressources', 'Nombre Total'],\n                        ['articles web', 293],\n                        ['publi. scient.', 262],\n                        ['sites web', 224],\n                        ['événements', 61]\n                    ]}\n                    options={{\n                        title: 'Nombre de ressources',\n                    }}\n                />\n\n                {/* AJouts de ressources */}\n                <Charts\n                    width={1200}\n                    heigth={400}\n                    chartType={\"ComboChart\"}\n                    data={[                          \n                        ['Month', 'articles web', 'publi. scient.', 'sites web', 'événements', 'Moyenne'],\n                        ['01',   5,  8,  2,  1,  4.00], \n                        ['02',  17, 12,  9,  1,  9.75], \n                        ['03',  15, 17, 12,  5, 12.25], \n                        ['04',  33, 23, 11,  8, 18.75], \n                        ['05',  18, 20, 30,  7, 18.75], \n                        ['06',  22, 32, 24,  3, 20.25], \n                        ['07',  32, 19, 22,  0, 18.25], \n                        ['08',  19, 21, 16,  9, 16.25], \n                        ['09',  29, 24, 38, 11, 25.50], \n                        ['10',  41, 27, 30,  7, 26.25], \n                        ['11',  37, 41, 14,  4, 24.00], \n                        ['12',  25, 18, 16,  5, 16.00]\n                    ]}\n                    options={{\n                        title : 'Ajouts de ressources',\n                        vAxis: {title: 'Ressources'},  hAxis: {title: 'Mois'},\n                        seriesType: 'bars', series: {4: {type: 'line'}}\n                    }}\n                />\n\n                {/* Distribution des types de cancer */}\n                <Charts\n                    width={1200}\n                    heigth={400}\n                    chartType={\"BubbleChart\"}\n                    data={[                          \n                        ['Type cancer', 'h pos', '% homme', 'sévérité', 'population'],\n                        ['colorectal',   10,  62,   67,  107],\n                        ['foie',         20,  34,   76,   93],\n                        ['peau',         30,  42,   60,   88],\n                        ['poumons',      40,  67,   89,  121],\n                        ['prostate',     50, 100,   40,   76],\n                        ['ovaires',      60,   0,   75,   59],\n                        ['sein',         70,   2,   67,  105],\n                        ['syst.nerveux', 80,  69,   82,   100],\n                        ['vessie',       90,  81,   39,   90]\n                    ]}\n                    options={{\n                        title: 'Distribution des types de cancer par sexe ' +\n                        '\\ncolorisation par sévérité moyenne des cas',\n                        // hAxis: {title: 'pathologies'},\n                        vAxis: {title: '% hommes'},\n                        hAxis: {\n                            ticks: [], \n                            baselineColor:'grey',\n                            viewWindow: 140\n                        },\n                        vAxis: {\n                            ticks: ['100','50','','',''], \n                            gridlines: {count:100}, \n                            maxValue: 10, \n                            minValue: -10, \n                            baselineColor: 'grey',\n                            viewWindow: 140\n                        },\n                        colorAxis: {colors: ['yellow', 'red']},\n                        bubble: {\n                            textStyle: {\n                                fontSize: 8,\n                                fontName: 'Times-Roman',\n                                color: 'black',\n                                bold: true,\n                                italic: false\n                            }\n                        }\n                    }}\n                />\n\n                {/* Répartition par sexe et tranche d'âge' */}\n                <Charts\n                    width={1200}\n                    heigth={300}\n                    chartType={\"ColumnChart\"}\n                    data={[                          \n                        [\"Sexe\", \"18-34 ans\", \"35-54 ans\", \"55-74 ans\", \"Plus de 75 ans\", { role: \"annotation\" } ],\n                        [\"Homme\", 40, 62, 28, 5, \"\"],\n                        [\"Femme\", 58, 88, 48, 15, \"\"],\n                        [\"Autre\",  9, 19, 12, 11, \"\"]\n                    ]}\n                    options={{\n                        isStacked: 'percent',\n                        height: 300,\n                        title: 'Répartition par sexe et tranche d\\'âge',\n                        legend: {position: 'top', maxLines: 3},\n                        vAxis: {\n                            minValue: 0,\n                            ticks: [0, .2, .4, .6, .8, 1]\n                        }\n                    }}\n                />\n        </div>\n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(Home);\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Login.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\user.service.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\partner.service.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\Ressources.js",["150"],"import React, {Component} from 'react';\n\nexport default class Ressources extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    \n    async componentDidMount() {\n\n    }\n\n    render() {\n        let {} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav\">\n                <a class=\"nav-link\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Ressources</h1>\n\n            {/* Search bar */}\n            <div class=\"input-group mb-4\">\n                <input type=\"search\" placeholder=\"Rechercher une ressource\" aria-describedby=\"button-addon5\" class=\"form-control\"/>\n                <div class=\"input-group-append\">\n                    <button id=\"button-addon5\" type=\"submit\" class=\"btn btn-primary\"><i class=\"fa fa-search\"></i></button>\n                </div>\n            </div>\n\n            <div class=\"text-center\">\n                <div class=\"spinner-border\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n            \n        </div>\n        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebArticles.js",["151","152","153","154","155"],"import React, {Component} from 'react';\nimport UserService from \"../../services/user.service\";\nimport Web_articleService from \"../../services/web_article.service\"\nimport moment from 'moment';\nimport {connect} from 'react-redux';\n\nclass WebArticles extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n            partner_id: null,\n            user_id: this.props.user,\n\n            title: null,\n            link: null,\n            author: null,\n            thumbnail: null,\n            publication_date: null,\n            abstract: null,\n        }\n    }\n    \n    async componentDidMount() {\n        let id = this.props.user;\n        let response = await UserService.details(id);\n        let partner_id = response.data.user.partner._id;\n        let response2 = await Web_articleService.list_by_partner(partner_id);\n        let articles = response2.data.articles;\n        this.setState({ articles: articles, partner_id: partner_id});\n    }\n\n    handleChange(e){ \n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0],\n        });\n    }\n\n    handleChangeUpdate(title, link, author, publication_date, abstract){ \n        this.setState({\n            ttile: title,\n            link: link,\n            author: author,\n            publication_date: publication_date,\n            abstract: abstract\n        });\n    }\n\n    async deletePartner(id){\n        try{\n            await Web_articleService.delete(id);\n            //let response = await PartnerService.list();\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e){\n            console.error(e);\n        }\n    }\n\n    async submit(e){\n        e.preventDefault();\n        let {title, link, author, thumbnail, publication_date, abstract, partner_id, user_id} = this.state;\n\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('link', link);\n        formData.append('author', author);\n        formData.append('publication_date', publication_date);\n        formData.append('thumbnail', thumbnail);\n        formData.append('abstract', abstract);\n        formData.append('partner', partner_id);\n        formData.append('created_by', user_id);\n\n        try{\n            await Web_articleService.create(formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdate(e, article_id){\n        e.preventDefault();\n        try{\n                let id = article_id;\n                let body = {ttile: this.state.title, link: this.state.link, author: this.state.author, publication_date: this.state.publication_date, abstract: this.state.abstract, updated_by: this.state.user_id};\n                await Web_articleService.update(id, body);\n                //let response = await PartnerService.list;\n                //this.setState({partners: response.data.partners});\n                window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdateThumbnail(e, artice_id){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        let id = artice_id;\n        try{\n            await Web_articleService.updateThumbnail(id, formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n\n    render() {\n        let {articles} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav nav-pills nav-justified\">\n                <a class=\"nav-link active\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Articles web</h1>\n\n            {/* Search bar */}\n            <form>\n                <div class=\"p-1 bg-light rounded rounded-pill shadow-sm mb-4\">\n                    <div class=\"input-group\">\n                    <input type=\"search\" placeholder=\"Rechercher un article\" aria-describedby=\"button-addon1\" class=\"form-control border-0 bg-light\"/>\n                    <div class=\"input-group-append\">\n                        <button id=\"button-addon1\" type=\"submit\" class=\"btn btn-link text-primary\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </form>\n\n            {/*-- Button trigger modal --*/}\n            <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_add\">Ajouter un article web</button>\n\n            {/*-- Modal add --*/}\n            <div class=\"modal fade\" id=\"modal_add\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Ajout d'article</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form onSubmit ={(e) => this.submit(e)}>\n                                <div class=\"form-group\">\n                                    <label for=\"title\">Titre de l'article</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"title\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"link\">Lien</label>\n                                    <input type=\"url\" class=\"form-control\" id=\"link\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"author\">Auteur</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"author\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"thumbnail\">Image</label>\n                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"publication_date\">Date de publication</label>\n                                    <input type=\"date\" class=\"form-control\" id=\"publication_date\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"abstract\">Résumé</label>\n                                    <textarea class=\"form-control\" id=\"abstract\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                                </div>\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n            {/* Liste of articles*/}\n            <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}>#</th>\n                        <th scope=\"col\">Titre</th>\n                        <th scope=\"col\">Auteur</th>\n                        <th scope=\"col\">Date de publication</th>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    articles.map((article, index) => { \n                        return <tr>\n                            <th scope=\"row\">{index}</th>\n                            <td data-toggle=\"modal\" data-target={\"#modal_details\"+index}><a href=\"#\">{article.title}</a></td>\n                            <td>{article.author}</td>\n                            <td>{moment(article.publication_date).format('DD/MM/YYYY')}</td>\n                            <td>\n                                <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                        onClick={(e) => this.handleChangeUpdate(article.title, article.link, article.author, article.publication_date, articles.abstract)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"></path>\n                                    </svg>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => this.deletePartner(article._id)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"></path>\n                                    </svg>\n                                </button>\n                            </td>\n\n                            {/*-- Modal details --*/}\n                            <div class=\"modal fade\" id={\"modal_details\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{article.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${article.thumbnail}`} class=\"rounded text-center content_center thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <div>\n                                                    <p class=\"card-text\"><b>Lien : </b><a href={article.link}>{article.link}</a></p>\n                                                    <p class=\"card-text\"><b>Résume : </b>{article.abstract}</p>\n                                                    <p class=\"card-text\"><b>Auteur : </b>{article.author}</p>\n                                                    <p class=\"card-text\"><b>Date de publication : </b>{moment(article.publication_date).format('DD/MM/YYYY')}</p>                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                {/* btn update */}\n                                                <a href=\"#\" class=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                                    onClick={(e) => this.handleChangeUpdate(article.title, article.link, article.author, article.publication_date, articles.abstract)}>Modifier\n                                                </a>\n                                                {/* btn delete */}\n                                                <a href=\"#\" class=\"btn btn-danger\" onClick={() => this.deletePartner(article._id)}>Supprimer</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/*-- Modal update --*/}\n                            <div class=\"modal fade\" id={\"modal_update\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{article.name}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${article.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <form  onSubmit={(e) => this.submitUpdateThumbnail(e, article._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"thumbnail\">Photo</label>\n                                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier la photo</button>\n                                                </div>\n                                            </form>\n                                            <form onSubmit={(e) => this.submitUpdate(e, article._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"title\">Titre</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"title\" defaultValue={article.title} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"link\">Lien</label>\n                                                    <input type=\"url\" class=\"form-control\" id=\"link\" defaultValue={article.link} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"author\">Auteur</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"author\" defaultValue={article.author} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"publication_date\">Date de publication</label>\n                                                    <input type=\"date\" class=\"form-control\" id=\"publication_date\" defaultValue={moment(article.publication_date).format('YYYY-MM-DD')} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"abstract\">Résumé</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"abstract\" defaultValue={article.abstract} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </tr>\n                    })\n                }\n                </tbody>\n            </table>\n\n        </div>        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(WebArticles);\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\Events.js",["156","157","158","159","160"],"import React, {Component} from 'react';\nimport UserService from \"../../services/user.service\";\nimport EventService from \"../../services/event.service\"\nimport moment from \"moment\";\nimport {connect} from 'react-redux';\n\nclass Events extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            events: [],\n            partner_id: null,\n            user_id: this.props.user,\n            \n            title: null,\n            link: null,\n            location: null,\n            thumbnail: null,\n            abstract: null,\n            address: null,\n            promoter: null,\n            phone: null,\n            email: null,\n            price: null,\n            start_datetime: null,\n            end_datetime: null,\n        }\n    }\n    \n    async componentDidMount() {\n        let id = this.props.user;\n        let response = await UserService.details(id);\n        let partner_id = response.data.user.partner._id;\n        let response2 = await EventService.list_by_partner(partner_id);\n        let events = response2.data.events;\n        this.setState({ events: events, partner_id: partner_id});\n    }\n\n    handleChange(e){ \n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0],\n        });\n    }\n\n    handleChangeUpdate(title, link, location, abstract, address, promoter, phone, email, price, start_datetime, end_datetime){ \n        this.setState({\n            title: title,\n            link: link,\n            location: location,\n            abstract: abstract,\n            address: address,\n            promoter: promoter,\n            phone: phone,\n            email: email,\n            price: price,\n            start_datetime: start_datetime,\n            end_datetime: end_datetime,\n        });\n    }\n\n    async deletePartner(id){\n        try{\n            await EventService.delete(id);\n            //let response = await PartnerService.list();\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e){\n            console.error(e);\n        }\n    }\n\n    async submit(e){\n        e.preventDefault();\n        let {title, link, thumbnail, abstract, location, address, promoter, phone, email, price, start_datetime, end_datetime, partner_id, user_id} = this.state;\n\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('link', link);\n        formData.append('thumbnail', thumbnail);\n        formData.append('abstract', abstract);\n        formData.append('location', location);\n        formData.append('address', address);\n        formData.append('promoter', promoter);\n        formData.append('phone', phone);\n        formData.append('email', email);\n        formData.append('price', price);\n        formData.append('start_datetime', start_datetime);\n        formData.append('end_datetime', end_datetime);\n        formData.append('partner', partner_id);\n        formData.append('created_by', user_id);\n        try{\n            await EventService.create(formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdate(e, event_id){\n        e.preventDefault();\n        try{\n                let id = event_id;\n                let body = {title: this.state.title, link: this.state.link, location: this.state.location, abstract: this.state.abstract, address: this.state.address, \n                        promoetr: this.state.promoter, phone: this.state.phone, email: this.state.email, price: this.state.price, start_datetime: this.state.start_datetime, \n                        end_datetime: this.state.end_datetime, updated_by: this.state.user_id};\n                await EventService.update(id, body);\n                //let response = await PartnerService.list;\n                //this.setState({partners: response.data.partners});\n                window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdateThumbnail(e, event_id){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        let id = event_id;\n        try{\n            await EventService.updateThumbnail(id, formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    render() {\n        let {events} = this.state;\n\n        return <div className=\"container-fluid\">            \n        <nav class=\"nav nav-pills nav-justified\">\n            <a class=\"nav-link \" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/WebArticles\">Articles web</a>\n            <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n            <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n            <a class=\"nav-link active\" href=\"/ressources/events\">Evenements</a>\n        </nav>\n\n        <h1 class=\"title_page\">Evenements</h1>\n\n        {/* Search bar */}\n        <form>\n            <div class=\"p-1 bg-light rounded rounded-pill shadow-sm mb-4\">\n                <div class=\"input-group\">\n                <input type=\"search\" placeholder=\"Rechercher un évènement\" aria-describedby=\"button-addon1\" class=\"form-control border-0 bg-light\"/>\n                <div class=\"input-group-append\">\n                    <button id=\"button-addon1\" type=\"submit\" class=\"btn btn-link text-primary\">\n                        <i class=\"fa fa-search\"></i>\n                    </button>\n                </div>\n                </div>\n            </div>\n        </form>\n\n        {/*-- Button trigger modal --*/}\n        <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_add\">Ajouter un évènement</button>\n\n        {/*-- Modal add --*/}\n        <div class=\"modal fade\" id=\"modal_add\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Ajout d'évènement</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form onSubmit ={(e) => this.submit(e)}>\n                            <div class=\"form-group\">\n                                <label for=\"title\">Titre de l'évènement</label>\n                                <input type=\"text\" class=\"form-control\" id=\"title\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"thumbnail\">Image</label>\n                                <input type=\"file\" class=\"form-control\" id=\"thumbnail\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"abstract\">Résumé</label>\n                                <textarea class=\"form-control\" id=\"abstract\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"link\">Lien</label>\n                                <input type=\"text\" class=\"form-control\" id=\"link\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"price\">Prix (en €)</label>\n                                <input type=\"number\" class=\"form-control\" id=\"price\" onChange={(e) => this.handleChange(e)} required/>\n                            </div> \n                            <div class=\"form-group\">\n                                <label for=\"promoter\">Organisateur</label>\n                                <input type=\"text\" class=\"form-control\" id=\"promoter\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"location\">Lieu</label>\n                                <input type=\"text\" class=\"form-control\" id=\"location\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"address\">Adresse</label>\n                                <input type=\"text\" class=\"form-control\" id=\"address\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"email\">Email</label>\n                                <input type=\"email\" class=\"form-control\" id=\"email\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>                        \n                            <div class=\"form-group\">\n                                <label for=\"phone\">Téléphone</label>\n                                <input type=\"tel\" class=\"form-control\" id=\"phone\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"start_datetime\">Date et heure de début</label>\n                                <input type=\"datetime-local\" class=\"form-control\" id=\"start_datetime\" onChange={(e) => this.handleChange(e)} required/>\n                            </div>                         \n                            <div class=\"form-group\">\n                                <label for=\"end_datetime\">Date et heure de fin</label>\n                                <input type=\"datetime-local\" class=\"form-control\" id=\"end_datetime\" onChange={(e) => this.handleChange(e)} required/>\n                            </div> \n\n                            <div class=\"modal-footer\">\n                                <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                            </div>\n                        </form>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        {/* Liste of articles*/}\n        <table class=\"table\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\" style={{\"width\":\"5%\"}}>#</th>\n                    <th scope=\"col\">Titre</th>\n                    <th scope=\"col\">Organisateur</th>\n                    <th scope=\"col\">Lieu</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\" style={{\"width\":\"5%\"}}></th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                events.map((event, index) => { \n                    return <tr>\n                        <th scope=\"row\">{index}</th>\n                        <td data-toggle=\"modal\" data-target={\"#modal_details\"+index}><a href=\"#\">{event.title}</a></td>\n                        <td>{event.promoter}</td>\n                        <td>{event.location}</td>\n                        <td>Du {moment(event.start_datetime).format('DD/MM/YYYY')} au {moment(event.end_datetime).format('DD/MM/YYYY')}</td>\n                        <td>\n                            <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                    onClick={(e) => this.handleChangeUpdate(event.title, event.link, event.location, \n                                        event.abstract, event.address, event.promoter, event.phone, event.email, event.price, event.start_datetime, event.end_datetime)}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"></path>\n                                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"></path>\n                                </svg>\n                            </button>\n                            <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => this.deletePartner(event._id)}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"></path>\n                                    <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"></path>\n                                </svg>\n                            </button>\n                        </td>\n\n                            {/*-- Modal details --*/}\n                            <div class=\"modal fade\" id={\"modal_details\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{event.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${event.thumbnail}`} class=\"rounded text-center content_center thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <div>\n                                                    <p class=\"card-text\"><b>Lien : </b><a href={event.link}>{event.link}</a></p>\n                                                    <p class=\"card-text\"><b>Résume : </b>{event.abstract}</p>\n                                                    <p class=\"card-text\"><b>Lieu : </b>{event.location}</p>\n                                                    <p class=\"card-text\"><b>Adresse : </b>{event.address}</p>\n                                                    <p class=\"card-text\"><b>Organisateur : </b>{event.promoter}</p>\n                                                    <p class=\"card-text\"><b>Téléphone : </b><a href={\"tel:\"+event.phone}>{event.phone}</a></p>\n                                                    <p class=\"card-text\"><b>Email : </b><a href={\"mailto:\"+event.email}>{event.email}</a></p>\n                                                    <p class=\"card-text\"><b>Prix : </b>{event.price} €</p>\n                                                    <p class=\"card-text\"><b>Date de début : </b>{moment(event.start_datetime).format('DD/MM/YYYY')}</p>\n                                                    <p class=\"card-text\"><b>Date de fin : </b>{moment(event.end_datetime).format('DD/MM/YYYY')}</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                {/* btn update */}\n                                                <a href=\"#\" class=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                                    onClick={(e) => this.handleChangeUpdate(event.title, event.link, event.location, \n                                                        event.abstract, event.address, event.promoter, event.phone, event.email, event.price, event.start_datetime, event.end_datetime)}>Modifier\n                                                </a>\n                                                {/* btn delete */}\n                                                <a href=\"#\" class=\"btn btn-danger\" onClick={() => this.deletePartner(event._id)}>Supprimer</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/*-- Modal update --*/}\n                            <div class=\"modal fade\" id={\"modal_update\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{event.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${event.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <form  onSubmit={(e) => this.submitUpdateThumbnail(e, event._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"thumbnail\">Image</label>\n                                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier l'image</button>\n                                                </div>\n                                            </form>\n                                            <form onSubmit={(e) => this.submitUpdate(e, event._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"name\">Nom de l'évènement</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"name\" defaultValue={event.title} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"link\">Lien</label>\n                                                    <input type=\"url\" class=\"form-control\" id=\"link\" defaultValue={event.link} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"location\">lieu</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"location\" defaultValue={event.location} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"abstract\">Résumé</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"abstract\" defaultValue={event.abstract} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"address\">Adresse</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"address\" defaultValue={event.address} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"promoter\">Organisateur</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"promoter\" defaultValue={event.promoter} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"phone\">Téléphone</label>\n                                                    <input type=\"tel\" class=\"form-control\" id=\"phone\" defaultValue={event.phone} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"email\">Email</label>\n                                                    <input type=\"mail\" class=\"form-control\" id=\"email\" defaultValue={event.email} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"price\">Prix (en €)</label>\n                                                    <input type=\"number\" class=\"form-control\" id=\"price\" defaultValue={event.price}  onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"start_datetime\">Date de début</label>\n                                                    <input type=\"datetime-local\" class=\"form-control\" id=\"start_datetime\" defaultValue={moment(event.start_datetime).format(\"YYYY-MM-DDTHH:mm\")} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"end_datetime\">Date de fin</label>\n                                                    <input type=\"datetime-local\" class=\"form-control\" id=\"end_datetime\" defaultValue={moment(event.end_datetime).format(\"YYYY-MM-DDTHH:mm\")} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                    </tr>\n                })\n            }\n            </tbody>\n        </table>\n\n    </div>     \n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(Events);","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebSites.js",["161","162","163","164","165"],"import React, {Component} from 'react';\nimport UserService from \"../../services/user.service\";\nimport Web_siteService from \"../../services/web_site.service\"\nimport {connect} from 'react-redux';\n\nclass WebSites extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sites: [],\n            partner_id: null,\n            user_id: this.props.user,\n\n            title: null,\n            abstract: null,\n            thumbnail: null,\n            link: null,\n            organization: null,\n        }\n    }\n    \n\n    async componentDidMount() {\n        let id = this.props.user;\n        let response = await UserService.details(id);\n        let partner_id = response.data.user.partner._id;\n        let response2 = await Web_siteService.list_by_partner(partner_id);\n        let sites = response2.data.sites;\n        this.setState({sites: sites, partner_id: partner_id});\n    }\n\n    handleChange(e){ \n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0],\n        });\n    }\n\n    handleChangeUpdate(title, abstract, link, organization){ \n        this.setState({\n            title: title,\n            abstract: abstract,\n            link: link,\n            organization: organization\n        });\n    }\n\n    async deletePartner(id){\n        try{\n            await Web_siteService.delete(id);\n            //let response = await PartnerService.list();\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e){\n            console.error(e);\n        }\n    }\n\n    async submit(e){\n        e.preventDefault();\n        let {title, link, thumbnail, abstract, organization, partner_id, user_id} = this.state;\n\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('link', link);\n        formData.append('thumbnail', thumbnail);\n        formData.append('abstract', abstract);\n        formData.append('organization', organization);\n        formData.append('partner', partner_id);\n        formData.append('created_by', user_id);\n\n        try{\n            await Web_siteService.create(formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdate(e, site_id){\n        e.preventDefault();\n        try{\n                let id = site_id;\n                let body = {title: this.state.title, abstract: this.state.abstract, link: this.state.link, organization: this.state.organization, updated_by: this.state.user_id};\n                await Web_siteService.update(id, body);\n                //let response = await PartnerService.list;\n                //this.setState({partners: response.data.partners});\n                window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdateThumbnail(e, site_id){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        let id = site_id;\n        try{\n            await Web_siteService.updateThumbnail(id, formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    render() {\n        let {sites} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav nav-pills nav-justified\">\n                <a class=\"nav-link\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link active\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Sites web</h1>\n\n            {/* Search bar */}\n            <form>\n                <div class=\"p-1 bg-light rounded rounded-pill shadow-sm mb-4\">\n                    <div class=\"input-group\">\n                    <input type=\"search\" placeholder=\"Rechercher un site\" aria-describedby=\"button-addon1\" class=\"form-control border-0 bg-light\"/>\n                    <div class=\"input-group-append\">\n                        <button id=\"button-addon1\" type=\"submit\" class=\"btn btn-link text-primary\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </form>\n\n            {/*-- Button trigger modal --*/}\n            <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_add\">Ajouter un site web</button>\n\n            {/*-- Modal add--*/}\n            <div class=\"modal fade\" id=\"modal_add\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Ajout de site web</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form onSubmit ={(e) => this.submit(e)}>\n                                <div class=\"form-group\">\n                                    <label for=\"title\">Nom du site</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"title\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"link\">Lien</label>\n                                    <input type=\"url\" class=\"form-control\" id=\"link\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"organization\">Société</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"organization\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"abstract\">Résumé</label>\n                                    <textarea class=\"form-control\" id=\"abstract\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"thumbnail\">Image</label>\n                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Liste of web sites*/}\n            <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}>#</th>\n                        <th scope=\"col\">Titre</th>\n                        <th scope=\"col\">Société</th>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    sites.map((site, index) => { \n                        return <tr>\n                            <th scope=\"row\">{index}</th>\n                            <td data-toggle=\"modal\" data-target={\"#modal_details\"+index}><a href=\"#\">{site.title}</a></td>\n                            <td>{site.organization}</td>\n                            <td>\n                                <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                        onClick={(e) => this.handleChangeUpdate(site.title, site.abstract, site.link, site.organization)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"></path>\n                                    </svg>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => this.deletePartner(site._id)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"></path>\n                                    </svg>\n                                </button>\n                            </td>\n\n                            {/*-- Modal details --*/}\n                            <div class=\"modal fade\" id={\"modal_details\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{site.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${site.thumbnail}`} class=\"rounded text-center content_center thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <div>\n                                                    <p class=\"card-text\"><b>Lien : </b><a href={site.link}>{site.link}</a></p>\n                                                    <p class=\"card-text\"><b>Société : </b>{site.organization}</p>                \n                                                    <p class=\"card-text\"><b>Résume : </b>{site.abstract}</p>                \n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                {/* btn update */}\n                                                <a href=\"#\" class=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                                    onClick={(e) => this.handleChangeUpdate(site.title, site.abstract, site.link, site.organization)}>Modifier\n                                                </a>\n                                                {/* btn delete */}\n                                                <a href=\"#\" class=\"btn btn-danger\" onClick={() => this.deletePartner(site._id)}>Supprimer</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/*-- Modal update --*/}\n                            <div class=\"modal fade\" id={\"modal_update\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{site.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${site.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <form  onSubmit={(e) => this.submitUpdateThumbnail(e, site._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"thumbnail\">Image</label>\n                                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier l'image</button>\n                                                </div>\n                                            </form>\n                                            <form onSubmit={(e) => this.submitUpdate(e, site._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"title\">Nom du site</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"title\" defaultValue={site.title} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"link\">Lien</label>\n                                                    <input type=\"url\" class=\"form-control\" id=\"link\" defaultValue={site.link} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"organization\">Société</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"organization\" defaultValue={site.organization} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"abstract\">Résumé</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"abstract\" defaultValue={site.abstract} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </tr>\n                    })\n                }\n                </tbody>\n            </table>\n\n        </div>\n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(WebSites);\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\ScientificPublications.js",["166","167","168","169","170"],"import React, {Component} from 'react';\nimport UserService from \"../../services/user.service\";\nimport Scientific_publicationService from \"../../services/scientific_publication.service\"\nimport moment from \"moment\";\nimport {connect} from 'react-redux';\n\nclass ScientificPublications extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            publications: [],  \n            partner_id: null,\n            user_id: this.props.user,\n\n            title: null,\n            link: null,\n            authors: null,\n            thumbnail: null,\n            publication_date: null,\n            abstract: null,\n        }\n    }\n    \n    async componentDidMount() {\n        let id = this.props.user;\n        let response = await UserService.details(id);\n        let partner_id = response.data.user.partner._id;\n        let response2 = await Scientific_publicationService.list_by_partner(partner_id);\n        let publications = response2.data.publications;\n        this.setState({ publications: publications, partner_id: partner_id});\n    }\n\n    handleChange(e){ \n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0],\n        });\n    }\n\n    handleChangeUpdate(title, link, authors, publication_date, abstract){ \n        this.setState({\n            title: title,\n            link: link,\n            authors: authors,\n            publication_date: publication_date,\n            abstract: abstract\n        });\n    }\n\n    async deletePartner(id){\n        try{\n            await Scientific_publicationService.delete(id);\n            //let response = await PartnerService.list();\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e){\n            console.error(e);\n        }\n    }\n\n    async submit(e){\n        e.preventDefault();\n        let {title, link, thumbnail, abstract, publication_date, authors, partner_id, user_id} = this.state;\n\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('link', link);\n        formData.append('thumbnail', thumbnail);\n        formData.append('abstract', abstract);\n        formData.append('publication_date', publication_date);\n        formData.append('authors', authors);\n        formData.append('partner', partner_id);\n        formData.append('created_by', user_id);\n\n        try{\n            await Scientific_publicationService.create(formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdate(e, publication_id){\n        e.preventDefault();\n        try{\n                let id = publication_id;\n                let body = {title: this.state.title, link: this.state.link, authors: this.state.authors, publication_date: this.state.publication_date, abstract: this.state.abstract, updated_by: this.state.user_id};\n                await Scientific_publicationService.update(id, body);\n                //let response = await PartnerService.list;\n                //this.setState({partners: response.data.partners});\n                window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdateThumbnail(e, publication_id){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        let id = publication_id;\n        try{\n            await Scientific_publicationService.updateThumbnail(id, formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n    \n    render() {\n        let {publications} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav nav-pills nav-justified\">\n                <a class=\"nav-link\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link active\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Publications scientifiques</h1>\n\n            {/* Search bar */}\n            <form>\n                <div class=\"p-1 bg-light rounded rounded-pill shadow-sm mb-4\">\n                    <div class=\"input-group\">\n                    <input type=\"search\" placeholder=\"Rechercher une publication\" aria-describedby=\"button-addon1\" class=\"form-control border-0 bg-light\"/>\n                    <div class=\"input-group-append\">\n                        <button id=\"button-addon1\" type=\"submit\" class=\"btn btn-link text-primary\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </form>\n\n            {/*-- Button trigger modal --*/}\n            <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_add\">Ajouter une publication scientifique</button>\n\n            {/*-- Modal add --*/}\n            <div class=\"modal fade\" id=\"modal_add\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Ajout de publication scientifique</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form onSubmit ={(e) => this.submit(e)}>\n                                <div class=\"form-group\">\n                                    <label for=\"title\">Titre de la publication</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"title\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"link\">Lien</label>\n                                    <input type=\"url\" class=\"form-control\" id=\"link\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"authors\">Auteurs</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"authors\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"thumbnail\">Image</label>\n                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"publication_date\">Date de publication</label>\n                                    <input type=\"date\" class=\"form-control\" id=\"publication_date\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"abstract\">Résumé</label>\n                                    <textarea class=\"form-control\" id=\"abstract\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Liste of articles*/}\n            <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}>#</th>\n                        <th scope=\"col\">Titre</th>\n                        <th scope=\"col\">Auteurs</th>\n                        <th scope=\"col\">Date de publication</th>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    publications.map((publication, index) => { \n                        return <tr>\n                            <th scope=\"row\">{index}</th>\n                            <td data-toggle=\"modal\" data-target={\"#modal_details\"+index}><a href=\"#\">{publication.title}</a></td>\n                            <td>{publication.authors}</td>\n                            <td>{moment(publication.publication_date).format('DD/MM/YYYY')}</td>\n                            <td>\n                                <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                        onClick={(e) => this.handleChangeUpdate(publication.title, publication.link, publication.authors, publication.publication_date, publication.abstract)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"></path>\n                                    </svg>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => this.deletePartner(publication._id)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"></path>\n                                    </svg>\n                                </button>\n                            </td>\n                            \n                            {/*-- Modal details --*/}\n                            <div class=\"modal fade\" id={\"modal_details\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{publication.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${publication.thumbnail}`} class=\"rounded text-center content_center thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <div>\n                                                    <p class=\"card-text\"><b>Lien : </b><a href={publication.link}>{publication.link}</a></p>\n                                                    <p class=\"card-text\"><b>Résume : </b>{publication.abstract}</p>\n                                                    <p class=\"card-text\"><b>Auteurs : </b>{publication.authors}</p>\n                                                    <p class=\"card-text\"><b>Date de publication : </b>{moment(publication.publication_date).format('DD/MM/YYYY')}</p>                                                    \n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                {/* btn update */}\n                                                <a href=\"#\" class=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal_update\"+index}\n                                                    onClick={(e) => this.handleChangeUpdate(publication.title, publication.link, publication.authors, publication.publication_date, publication.abstract)}>Modifier\n                                                </a>\n                                                {/* btn delete */}\n                                                <a href=\"#\" class=\"btn btn-danger\" onClick={() => this.deletePartner(publication._id)}>Supprimer</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/*-- Modal update --*/}\n                            <div class=\"modal fade\" id={\"modal_update\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{publication.title}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${publication.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <form  onSubmit={(e) => this.submitUpdateThumbnail(e, publication._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"thumbnail\">Image</label>\n                                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier l'image</button>\n                                                </div>\n                                            </form>\n                                            <form onSubmit={(e) => this.submitUpdate(e, publication._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"title\">Nom de la publication</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"title\" defaultValue={publication.title} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"link\">Lien</label>\n                                                    <input type=\"url\" class=\"form-control\" id=\"link\" defaultValue={publication.link} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"authors\">Auteurs</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"authors\" defaultValue={publication.authors} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"publication_date\">Téléphone</label>\n                                                    <input type=\"date\" class=\"form-control\" id=\"publication_date\" defaultValue={moment(publication.publication_date).format('YYYY-MM-DD')} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"abstract\">résumé</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"abstract\" defaultValue={publication.abstract} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                        </tr>\n                    })\n                }\n                </tbody>\n            </table>\n        </div>\n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(ScientificPublications);","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\web_article.service.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\web_site.service.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\scientific_publication.service.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\event.service.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\role.service.js",[],["171","172"],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Partners\\Partner.js",["173","174","175","176","177"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PartnerService from \"../../services/partner.service\";\nimport CityService from \"../../services/city.service\";\n\nclass Partner extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            partners: [],\n            //cities: [],\n\n            name: null, \n            thumbnail: null,\n            website: null, \n            email: null,\n            phone: null,\n            address: null,\n            //activatedCity: null,\n            user_id: this.props.user,\n        }\n    }\n\n    async componentDidMount() {\n        try{      \n            let response1 = await PartnerService.list();\n            let partners = response1.data.partners;\n            /*let response2= await CityService.list();\n            let cities = response2.data.cities;*\n            this.setState({partners: partners, cities : cities, activatedCity: cities[0]._id});*/\n            this.setState({partners: partners});\n        }catch (e) {\n            console.error(e)\n        }\n    }\n\n    handleChange(e){ \n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleChangeUpdate(name, website, email, phone, address){ \n        this.setState({\n            name: name,\n            website: website,\n            email: email,\n            phone: phone,\n            address: address\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0],\n        });\n    }\n\n    async submit(e){\n        e.preventDefault();\n        let {name, thumbnail, website, email, phone, address, activatedCity, user_id} = this.state;\n\n        let formData = new FormData();\n        formData.append('name', name);\n        formData.append('thumbnail', thumbnail);\n        formData.append('website', website);\n        formData.append('email', email);\n        formData.append('phone', phone);\n        formData.append('address', address);\n        //formData.append('city', [activatedCity]);\n        formData.append('subscription', false);\n        formData.append('created_by', user_id);\n\n        try{\n            await PartnerService.create(formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdate(e, partner_id){\n        e.preventDefault();\n        try{\n                let id = partner_id;\n                let body = {name: this.state.name, website: this.state.website, email: this.state.email, phone: this.state.phone, address: this.state.address, updated_by: this.state.user_id};\n                await PartnerService.update(id, body);\n                //let response = await PartnerService.list;\n                //this.setState({partners: response.data.partners});\n                window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdateThumbnail(e, partner_id){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        let id = partner_id;\n        try{\n            await PartnerService.updateThumbnail(id, formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async deletePartner(id){\n        try{\n            await PartnerService.delete(id);\n            //let response = await PartnerService.list();\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e){\n            console.error(e);\n        }\n    }\n\n    render() {\n        let {partners, /*cities*/} = this.state;\n        \n        return <div className=\"container-fluid\">\n            <h1 class=\"title_page\">Partenaires</h1>\n\n            {/* search bar */}\n            <form>\n                <div class=\"p-1 bg-light rounded rounded-pill shadow-sm mb-4\">\n                    <div class=\"input-group\">\n                    <input type=\"search\" placeholder=\"Rechercher un partenaire\" aria-describedby=\"button-addon1\" class=\"form-control border-0 bg-light\"/>\n                    <div class=\"input-group-append\">\n                        <button id=\"button-addon1\" type=\"submit\" class=\"btn btn-link text-primary\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n                    </div>\n                </div>\n            </form>\n\n            {/*-- Button trigger modal --*/}\n            <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_add_partner\"> Ajouter un partenaire </button>\n\n            {/*-- Modal add--*/}\n            <div class=\"modal fade\" id=\"modal_add_partner\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Ajout de partenaire</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                    <form onSubmit ={(e) => this.submit(e)}>\n                        <div class=\"form-group\">\n                            <label for=\"name\">Nom du partenaire</label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" onChange={(e) => this.handleChange(e)} required/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"thumbnail\">Photo</label>\n                            <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\"  onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"website\">Site web</label>\n                            <input type=\"text\" class=\"form-control\" id=\"website\" onChange={(e) => this.handleChange(e)} required/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"email\">Email</label>\n                            <input type=\"mail\" class=\"form-control\" id=\"email\" onChange={(e) => this.handleChange(e)} required/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"phone\">Téléphone</label>\n                            <input type=\"tel\" class=\"form-control\" id=\"phone\" onChange={(e) => this.handleChange(e)} required/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"address\">Adresse</label>\n                            <input type=\"text\" class=\"form-control\" id=\"address\" onChange={(e) => this.handleChange(e)}/>\n                        </div>\n                        {/*<div class=\"form-group\">\n                            <label for=\"city\">Ville</label>\n                            <select class=\"form-control\" id=\"activatedCity\" onChange={(e) => this.handleChange(e)} required>\n                                {\n                                    cities.map((city, index) => {\n                                        return <option key={index} value={city._id}>{city.nom}</option>\n                                    })\n                                }\n                            </select >\n                            </div>*/}\n                        <div class=\"modal-footer\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                        </div>\n                    </form>\n                    </div>\n\n                    </div>\n                </div>\n            </div>\n\n            {/*-- Liste of partners --*/}\n            <table class=\"table border\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}>#</th>\n                        <th scope=\"col\" style={{\"width\":\"50%\"}}>Nom</th>\n                        <th scope=\"col\" style={{\"width\":\"40%\"}}>Abonnement</th>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    partners.map((partner, index) => { \n                        return <tr>\n                                <th>{index}</th>\n                                <td data-toggle=\"modal\" data-target={\"#modal_details_partner\"+index}><a href=\"#\">{partner.name}</a></td>\n                                {\n                                    partner.subscription === true\n                                    ? <td>Formule payante</td>\n                                    : <td>Formule gratuite</td>\n                                }\n                            <td>\n                                {/* btn update */}\n                                <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target={\"#modal_update_partner\"+index} \n                                    onClick={(e) => this.handleChangeUpdate(partner.name, partner.website, partner.email, partner.phone, partner.address)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"></path>\n                                    </svg>\n                                </button>\n                                {/* btn delete */}\n                                <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => this.deletePartner(partner._id)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"></path>\n                                    </svg>\n                                </button>\n                            </td>\n\n                            {/*-- Modal details --*/}\n                            <div class=\"modal fade\" id={\"modal_details_partner\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{partner.name}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${partner.thumbnail}`} class=\"rounded text-center content_center thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <div>\n                                                    <p class=\"card-text\"><b>Site web : </b><a href={partner.website}>{partner.website}</a></p>\n                                                    <p class=\"card-text\"><b>Abonnement : </b>                                                    \n                                                        {partner.subscription === true ? \"Formule payante\" : \"Formule gratuite\"}</p>\n                                                    <p class=\"card-text\"><b>Email : </b><a href={\"mailto:\"+partner.email}>{partner.email}</a></p>\n                                                    <p class=\"card-text\"><b>Téléphone : </b><a href={\"tel:\"+partner.phone}>{partner.phone}</a></p>\n                                                    <p class=\"card-text\"><b>Adresse : </b>{partner.address}</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                {/* btn update */}\n                                                <a href=\"#\" class=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal_update_partner\"+index}\n                                                    onClick={(e) => this.handleChangeUpdate(partner.name, partner.website, partner.email, partner.phone, partner.address)}>Modifier\n                                                </a>\n                                                {/* btn delete */}\n                                                <a href=\"#\" class=\"btn btn-danger\" onClick={() => this.deletePartner(partner._id)}>Supprimer</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/*-- Modal update --*/}\n                            <div class=\"modal fade\" id={\"modal_update_partner\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{partner.name}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${partner.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <form  onSubmit={(e) => this.submitUpdateThumbnail(e, partner._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"thumbnail\">Photo</label>\n                                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier la photo</button>\n                                                </div>\n                                            </form>\n                                            <form onSubmit={(e) => this.submitUpdate(e, partner._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"name\">Nom du partenaire</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"name\" defaultValue={partner.name} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"website\">Site web</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"website\" defaultValue={partner.website} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"email\">Email</label>\n                                                    <input type=\"mail\" class=\"form-control\" id=\"email\" defaultValue={partner.email} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"phone\">Téléphone</label>\n                                                    <input type=\"tel\" class=\"form-control\" id=\"phone\" defaultValue={partner.phone} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"address\">Adresse</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"address\" defaultValue={partner.address} onChange={(e) => this.handleChange(e)}/>\n                                                </div>\n\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </tr>\n                    })\n                }\n                </tbody>\n            </table>\n\n        </div>\n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(Partner);\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Partners\\Partner_details.js",["178","179"],"import React, {Component} from 'react';\nimport PartnerService from \"../../services/partner.service\";\n\nexport default class Partner extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            partner: {},\n        }\n    }\n\n\n    async componentDidMount() {\n        let {id} = this.props.match.params;\n        let response = await PartnerService.details(id);\n        let partner = response.data.partner;\n        this.setState({partner: partner});\n    }\n\n    render() {\n        let {partner} = this.state;\n        return <div className=\"container-fluid\">\n            <h1 class=\"title_page\">Partenaires</h1>\n\n            <div class=\"text-center content_center\">\n                <img src={`${process.env.REACT_APP_HOST_API}/${partner.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                <div class=\"card-body\">\n                    <div>\n                        <p class=\"card-text\"><b>Site web : </b><a href={partner.website}>{partner.website}</a></p>\n                        <p class=\"card-text\"><b>Abonnement : </b>Formule payante</p>\n                    </div>\n                </div>\n                <a href=\"#\" class=\"btn btn-success\">Modifier</a>\n                <a href=\"#\" class=\"btn btn-danger\">Supprimer</a>\n            </div>\n\n           \n        </div>\n        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\MyTeam.js",["180","181","182","183"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport UserService from \"../services/user.service\";\n\nclass MyTeam extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: [],\n            partner: {},\n\n            last_name: null,\n            first_name: null,\n            email: null,\n            password: null,\n            thumbnail: null,\n            user_id: this.props.user,\n            \n        }\n    }\n    \n    async componentDidMount() {\n        let id = this.props.user;\n        let user = await UserService.details(id);\n            user = user.data.user; \n        let partner = user.partner;\n        let response = await UserService.list_by_partner(partner._id);\n        let members = response.data.users;\n        console.log(members);\n        this.setState({ members: members, partner: partner});\n    }\n\n    handleChange(e){ \n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    }\n\n    handleChangeUpdate(last_name, first_name, email){ \n        this.setState({\n            last_name: last_name,\n            first_name: first_name,\n            email: email,\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0],\n        });\n    }\n\n    async submit(e){\n        e.preventDefault();\n        let {last_name, first_name, email, password, thumbnail, partner, user_id} = this.state;\n\n        let formData = new FormData();\n        formData.append('last_name', last_name);\n        formData.append('first_name', first_name);\n        formData.append('email', email);\n        formData.append('password', password);\n        formData.append('thumbnail', thumbnail);\n        formData.append('partner', partner._id);\n        formData.append('created_by', user_id);\n        try{\n            await UserService.create(formData);\n            //let response = await UserService.list;\n            //this.setState({members: response.data.users});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdate(e, id){\n        e.preventDefault();\n        try{\n                let body = {last_name: this.state.last_name, first_name: this.state.first_name, email: this.state.email, updated_by: this.state.user_id};\n                await UserService.update(id, body);\n                //let response = await PartnerService.list;\n                //this.setState({partners: response.data.partners});\n                window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitUpdateThumbnail(e, id){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        try{\n            await UserService.updateThumbnail(id, formData);\n            //let response = await PartnerService.list;\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async deleteMember(id){\n        try{\n            await UserService.delete(id);\n            //let response = await PartnerService.list();\n            //this.setState({partners: response.data.partners});\n            window.location.reload(true);\n        }catch (e){\n            console.error(e);\n        }\n    }\n\n    render() {\n        let {members, partner} = this.state;\n\n        return <div className=\"container-fluid\">\n            <h1 class=\"title_page\">Mon organisation</h1>\n\n            <div class=\"text-center mb-3\">\n                <img src={`${process.env.REACT_APP_HOST_API}/${partner.thumbnail}`} class=\"rounded thumbnail mb-3\" alt=\"Profil picture\"/>\n                <h5 class=\"mb-3\">{partner.name}</h5>\n                <button type=\"button\" class=\"btn btn-primary mb-3\" data-toggle=\"modal\" data-target=\"#modal_facture\"> Factures </button>\n            </div>\n\n            {/*-- modal facture --*/}\n            <div class=\"modal fade\" id=\"modal_facture\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <b>Aucune facture</b>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/*-- Button trigger modal --*/}\n            <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_add_member\"> Ajouter un membre </button>\n\n            {/*-- Modal add--*/}\n            <div class=\"modal fade\" id=\"modal_add_member\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Ajout de membre</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form onSubmit ={(e) => this.submit(e)}>\n                                <div class=\"form-group\">\n                                    <label for=\"last_name\">Nom</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"last_name\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"first_name\">Prénom</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"first_name\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>                        <div class=\"form-group\">\n                                    <label for=\"email\">Adresse email</label>\n                                    <input type=\"email\" class=\"form-control\" id=\"email\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>                        <div class=\"form-group\">\n                                    <label for=\"password\">Mots de passe</label>\n                                    <input type=\"password\" class=\"form-control\" id=\"password\" onChange={(e) => this.handleChange(e)} required/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"thumbnail\">Photo</label>\n                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/*-- Liste of partners --*/}\n            <table class=\"table\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}>#</th>\n                        <th scope=\"col\">Nom</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Role</th>\n                        <th scope=\"col\" style={{\"width\":\"5%\"}}></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                {\n                    members.map((member, index) => { \n                        return <tr>\n                            <th scope=\"row\">{index}</th>\n                            <td data-toggle=\"modal\" data-target={\"#modal_details_member\"+index}><a href=\"#\">{member.last_name} {member.first_name}</a></td>\n                            <td>{member.email}</td>\n                            <td>{member.role.name}</td>\n                            <td>\n                                <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target={\"#modal_update_member\"+index}\n                                    onClick={(e) => this.handleChangeUpdate(member.last_name, member.first_name, member.email)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"></path>\n                                    </svg>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => this.deleteMember(member._id)}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"></path>\n                                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"></path>\n                                    </svg>\n                                </button>\n                            </td>\n\n                            {/*-- Modal details --*/}\n                            <div class=\"modal fade\" id={\"modal_details_member\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{partner.name}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${member.thumbnail}`} class=\"rounded text-center content_center thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <div class=\"card-body\">\n                                                <div>\n                                                    <p class=\"card-text\"><b>Nom : </b>{member.last_name}</p>\n                                                    <p class=\"card-text\"><b>prénom : </b>{member.first_name}</p>\n                                                    <p class=\"card-text\"><b>Email : </b><a href={\"mailto:\"+member.email}>{member.email}</a></p>\n                                                    <p class=\"card-text\"><b>Role : </b>{member.role.name}</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                {/* btn update */}\n                                                <a href=\"#\" class=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal_update_member\"+index}\n                                                    onClick={(e) => this.handleChangeUpdate(member.last_name, member.first_name, member.email)}>Modifier\n                                                </a>\n                                                {/* btn delete */}\n                                                <a href=\"#\" class=\"btn btn-danger\" onClick={() => this.deleteMember(member._id)}>Supprimer</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/*-- Modal update --*/}\n                            <div class=\"modal fade\" id={\"modal_update_member\"+index} data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">{partner.name}</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                            </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            <div class=\"text-center content_center\">\n                                                <img src={`${process.env.REACT_APP_HOST_API}/${member.thumbnail}`} class=\"rounded thumbnail_partner\" alt=\"...\"/>\n                                            </div>\n                                            <form  onSubmit={(e) => this.submitUpdateThumbnail(e, member._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"thumbnail\">Photo</label>\n                                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier la photo</button>\n                                                </div>\n                                            </form>\n                                            <form onSubmit={(e) => this.submitUpdate(e, member._id)}>\n                                                <div class=\"form-group\">\n                                                    <label for=\"last_name\">Nom</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"last_name\" defaultValue={member.last_name} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"first_name\">Prénom</label>\n                                                    <input type=\"text\" class=\"form-control\" id=\"first_name\" defaultValue={member.first_name} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"form-group\">\n                                                    <label for=\"email\">Email</label>\n                                                    <input type=\"mail\" class=\"form-control\" id=\"email\" defaultValue={member.email} onChange={(e) => this.handleChange(e)} required/>\n                                                </div>\n                                                <div class=\"modal-footer\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </tr>\n                    })\n                }     \n                </tbody>\n\n            </table>\n\n        </div>        \n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(MyTeam);\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\MyAccount.js",["184"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport UserService from \"../services/user.service\";\n\nclass Account extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            role: {},\n            last_name: {}, \n            first_name: {}, \n            password : {},\n            password_new: {},\n            password_comfirm :{},\n            thumbnail: null,\n            isError: false,\n        };\n    }\n    \n    async componentDidMount() {\n        let id = this.props.user;\n        try{\n            let response = await UserService.details(id);\n            let user = response.data.user;\n            let role = response.data.user.role;\n            let last_name = response.data.user.last_name;\n            let first_name = response.data.user.first_name;\n            let password = response.data.user.password;\n            this.setState({user : user, \n                role : role, last_name : last_name, \n                first_name : first_name, \n                password : password,\n                password_new : password,\n                password_comfirm : password,\n            });\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    handleChangeUpdate(e){\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleChangeThumbnail(e){\n        this.setState({\n            thumbnail: e.target.files[0]\n        });\n    }\n\n    async submitUpdate(e){\n        e.preventDefault();\n        this.setState({isError: false});\n        try{\n            if(this.state.password_new === this.state.password_comfirm){\n                var password = this.state.password_new;\n                this.setState({password : this.state.password_new});\n                let id = this.props.user;\n                let body = {last_name: this.state.last_name, first_name: this.state.first_name, password: password, updated_by: id};\n                await UserService.update(id, body);\n                //let response = await UserService.details(id);\n                //this.setState({user: response.data.user});\n                window.location.reload(true);\n            }else{\n                this.setState({isError: true});\n            }\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    async submitThumbnail(e){\n        e.preventDefault();\n        let {thumbnail} = this.state;\n        let formData = new FormData();\n        formData.append('thumbnail', thumbnail); //body\n\n        let id = this.props.user;\n        try{\n            await UserService.updateThumbnail(id, formData);\n            let response = await UserService.details(id);\n            this.setState({user: response.data.user});\n            window.location.reload(true);\n        }catch (e) {\n            console.error(e);\n        }\n    }\n\n    render() {\n        let {user, role, isError} = this.state;\n\n        return <div className=\"container-fluid\">\n            <h1 class=\"title_page\">Mon compte</h1>\n            <div class=\"w-75 content_center\">\n                <div class=\"text-center\">\n                    <img src={`${process.env.REACT_APP_HOST_API}/${user.thumbnail}`} class=\"rounded thumbnail\" alt=\"Profil picture\"/><br/>\n                    {/* btn update thumbnail */}\n                    <button type=\"button\" class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#modal_update_thumbnail\">Modifier</button>\n\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"first_name\" class=\"form-label\">Prénom :</label>\n                    <input type=\"text\" class=\"form-control\" value={user.first_name} readOnly/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"last_name\" class=\"form-label\">Nom :</label>\n                    <input type=\"text\" class=\"form-control\" value={user.last_name} readOnly/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"mail\" class=\"form-label\">Adresse email :</label>\n                    <input type=\"mail\" class=\"form-control\" value={user.email} readOnly/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"mail\" class=\"form-label\">Role :</label>\n                    <input type=\"mail\" class=\"form-control\" value={role.name} readOnly/>\n                </div>\n\n            {/*-- Button trigger modal --*/}\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modal_update_user\"> Modifier mes imformations </button>\n                </div>\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\"btn btn-primary btn_add\" data-toggle=\"modal\" data-target=\"#modal_update_password\"> Changer de mots de passe </button>\n                </div>\n\n            </div>\n\n\n        {/*-- Modal --*/}\n            {/*-- Update user infos --*/}\n            <div class=\"modal fade\" id=\"modal_update_user\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Modification</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form onSubmit={(e) => this.submitUpdate(e)}>\n                            <div class=\"form-group\">\n                                <label for=\"last_name\">Nom</label>\n                                <input type=\"text\" class=\"form-control\" id=\"last_name\" defaultValue={user.last_name} onChange={(e) => this.handleChangeUpdate(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"first_name\">Prénom</label>\n                                <input type=\"text\" class=\"form-control\" id=\"first_name\" defaultValue={user.first_name} onChange={(e) => this.handleChangeUpdate(e)} required/>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                            </div>\n                        </form>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n            {/*-- update password --*/}\n            <div class=\"modal fade\" id=\"modal_update_password\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Modification du mots de passe</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form onSubmit={(e) => this.submitUpdate(e)}>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Nouveau mots de passe</label>\n                                <input type=\"password\" class=\"form-control\" id=\"password_new\" onChange={(e) => this.handleChangeUpdate(e)} required/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password_comfirm\">Comfirmation du mots de passe</label>\n                                <input type=\"password\" class=\"form-control\" id=\"password_comfirm\" onChange={(e) => this.handleChangeUpdate(e)} required/>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                            </div>\n                            {isError && <div class=\"alert alert-danger\" role=\"alert\">Les mots de passe ne correspondent pas</div>}\n                        </form>\n                    </div>\n                    </div>\n                </div>\n            </div>\n\n            {/*-- update thumbnail --*/}\n            <div class=\"modal fade\" id=\"modal_update_thumbnail\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Modification de la photo de profil</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form  onSubmit={(e) => this.submitThumbnail(e)}>\n                                <div class=\"form-group\">\n                                    <label for=\"thumbnail\">Photo</label>\n                                    <input type=\"file\" class=\"form-control\" id=\"thumbnail\" accept=\"image/png, image/jpeg\" onChange={(e) => this.handleChangeThumbnail(e)} required/>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"submit\" class=\"btn btn-primary\">Modifier</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {user: state.user}\n};\n\nexport default connect(mapStateToProps, null)(Account);\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Member-details.js",["185","186","187"],"import React, {Component} from 'react';\nimport UserService from \"../services/user.service\";\n\nexport default class MyAccount extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            member: {},\n        }\n    }\n    \n    async componentDidMount() {\n        let {id} = this.props.match.params;\n        let response = await UserService.details(id);\n        let member = response.data.user;\n        this.setState({member: member});\n    }\n\n    render() {\n        let {member} = this.state;\n\n        return <div className=\"container-fluid\">\n            <h1 class=\"title_page\">Mon équipe</h1>\n\n            <div class=\"w-75 content_center\">\n                <div class=\"text-center\">\n                    <img src={`${process.env.REACT_APP_HOST_API}/${member.thumbnail}`} class=\"rounded thumbnail\" alt=\"Profil picture\"/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"last_name\" class=\"form-label\">Nom :</label>\n                    <input type=\"text\" class=\"form-control\" id=\"last_name\" value={member.last_name} readOnly/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"first_name\" class=\"form-label\">Prénom :</label>\n                    <input type=\"text\" class=\"form-control\" id=\"first_name\" value={member.first_name} readOnly/>\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"mail\" class=\"form-label\">Adresse email :</label>\n                    <input type=\"mail\" class=\"form-control\" id=\"mail\" value={member.email} readOnly/>\n                </div>\n                <div class=\"mb-3 text-center\">\n                    <a href=\"#\" class=\"btn btn-success\">Modifier</a>\n                    <a href=\"#\" class=\"btn btn-danger\">Supprimer</a>\n                </div>\n\n            </div>\n\n        </div>\n        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebArticles_details.js",["188","189","190","191"],"import React, {Component} from 'react';\nimport Web_articleService from \"../../services/web_article.service\"\nimport moment from \"moment\";\n\nexport default class WebArticles extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            article: [],\n        }\n    }\n    \n    async componentDidMount() {\n        let {id} = this.props.match.params;\n        let response = await Web_articleService.details(id);\n        let article = response.data.article;\n        this.setState({article: article});\n    }\n\n    render() {\n        let {article} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav\">\n                <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Articles web</h1>\n\n            <div class=\"text-center w-75 content_center\">\n                <img src={`${process.env.REACT_APP_HOST_API}/${article.thumbnail}`} class=\"rounded thumbnail\" alt=\"...\"/>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{article.title}</h5>\n                    <div class=\"text-left mb-3\">\n                        <p class=\"card-text\"><b>Résumé : </b>{article.abstract}</p>\n                        <p class=\"card-text\"><b>Lien : </b><a href={article.link}>{article.link}</a></p>\n                        <p class=\"card-text\"><b>Auteur : </b>{article.author}</p>\n                        <p class=\"card-text\"><b>Date de publication : </b>{moment(article.publication_date).format('DD/MM/YYYY')}</p>\n                    </div>\n                    <a href=\"#\" class=\"btn btn-success\">Modifier</a>\n                    <a href=\"#\" class=\"btn btn-danger\">Supprimer</a>\n                </div>\n            </div>\n\n        </div>        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\WebSites_details.js",["192","193","194","195"],"import React, {Component} from 'react';\nimport Web_siteService from \"../../services/web_site.service\"\n\nexport default class WebSites extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            site: {},\n        }\n    }\n    \n    async componentDidMount() {\n        let {id} = this.props.match.params;\n        let response = await Web_siteService.details(id);\n        let site = response.data.site;\n        this.setState({site: site});\n    }\n\n\n    render() {\n        let {site} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav\">\n                <a class=\"nav-link\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Sites web</h1>\n\n            <div class=\"text-center w-75 content_center\">\n                <img src={`${process.env.REACT_APP_HOST_API}/${site.thumbnail}`} class=\"rounded thumbnail\" alt=\"...\"/>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{site.title}</h5>\n                    <div class=\"text-left mb-3\">\n                        <p class=\"card-text\"><b>Résumé : </b>{site.abstract}</p>\n                        <p class=\"card-text\"><b>Lien : </b><a href={site.link}>{site.link}</a></p>\n                        <p class=\"card-text\"><b>Société : </b>{site.organization}</p>\n                    </div>\n                    <a href=\"#\" class=\"btn btn-success\">Modifier</a>\n                    <a href=\"#\" class=\"btn btn-danger\">Supprimer</a>\n                </div>\n            </div>\n\n        </div>\n        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\ScientificPublications_details.js",["196","197","198","199"],"import React, {Component} from 'react';\nimport Scientific_publicationService from \"../../services/scientific_publication.service\"\nimport moment from \"moment\";\n\nexport default class ScientificPublications extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            publication: {},  \n        }\n    }\n    \n    async componentDidMount() {\n        let {id} = this.props.match.params;\n        let response = await Scientific_publicationService.details(id);\n        let publication = response.data.publication;\n        this.setState({publication: publication});\n    }\n\n    render() {\n        let {publication} = this.state;\n\n        return <div className=\"container-fluid\">            \n            <nav class=\"nav\">\n                <a class=\"nav-link\" href=\"/ressources/WebArticles\">Articles web</a>\n                <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n                <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n                <a class=\"nav-link\" href=\"/ressources/events\">Evenements</a>\n            </nav>\n\n            <h1 class=\"title_page\">Publications scientifiques</h1>\n\n            <div class=\"text-center w-75 content_center\">\n                <img src={`${process.env.REACT_APP_HOST_API}/${publication.thumbnail}`} class=\"rounded thumbnail\" alt=\"...\"/>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{publication.title}</h5>\n                    <div class=\"text-left mb-3\">\n                        <p class=\"card-text\"><b>Résumé : </b>{publication.abstract}</p>\n                        <p class=\"card-text\"><b>Lien : </b><a href={publication.link}>{publication.link}</a></p>\n                        <p class=\"card-text\"><b>Auteurs : </b>{publication.authors}</p>\n                        <p class=\"card-text\"><b>Date de publication : </b>{moment(publication.publication_date).format('DD/MM/YYYY')}</p>\n\n                    </div>\n                    <a href=\"#\" class=\"btn btn-success\">Modifier</a>\n                    <a href=\"#\" class=\"btn btn-danger\">Supprimer</a>\n                </div>\n            </div>\n\n        </div>\n        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\views\\Ressources\\Events_details.js",["200","201","202","203"],"import React, {Component} from 'react';\nimport EventService from \"../../services/event.service\"\nimport moment from \"moment\";\n\nexport default class Events extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            event: {},\n        }\n    }\n    \n    async componentDidMount() {\n        let {id} = this.props.match.params;\n        let response = await EventService.details(id);\n        let event = response.data.event;\n        this.setState({event: event});\n    }\n\n    render() {\n        let {event} = this.state;\n\n        return <div className=\"container-fluid\">            \n        <nav class=\"nav\">\n            <a class=\"nav-link\" href=\"/ressources/WebArticles\">Articles web</a>\n            <a class=\"nav-link\" href=\"/ressources/websites\">Sites web</a>\n            <a class=\"nav-link\" href=\"/ressources/scientificpublications\">Publications scientifiques</a>\n            <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\" href=\"/ressources/events\">Evenements</a>\n        </nav>\n\n        <h1 class=\"title_page\">Evenements</h1>\n\n        <div class=\"text-center w-75 content_center\">\n            <img src={`${process.env.REACT_APP_HOST_API}/${event.thumbnail}`} class=\"rounded thumbnail\" alt=\"...\"/>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{event.title}</h5>\n                <div class=\"text-left mb-3\">\n                    <p class=\"card-text\"><b>Résumé : </b>{event.abstract}</p>\n                    <p class=\"card-text\"><b>Date : </b>Du : {moment(event.start_at).format('DD/MM/YYYY')} au : {moment(event.end_at).format('DD/MM/YYYY')}</p>\n                    <p class=\"card-text\"><b>Lieu : </b>{event.location}</p>\n                    <p class=\"card-text\"><b>Organisateur : </b>{event.promoter}</p>\n                    <p class=\"card-text\"><b>Contact : </b>{event.email}</p>\n\n                </div>\n                <a href=\"#\" class=\"btn btn-success\">Modifier</a>\n                <a href=\"#\" class=\"btn btn-danger\">Supprimer</a>\n            </div>\n        </div>\n\n    </div>     \n        \n    }\n}\n","C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\components\\Chart.js",[],"C:\\Users\\xavir\\OneDrive\\Bureau\\THP\\mvp\\front\\src\\services\\city.service.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":41,"column":21,"nodeType":"210","endLine":41,"endColumn":145},{"ruleId":"211","severity":1,"message":"212","line":45,"column":25,"nodeType":"210","endLine":45,"endColumn":170},{"ruleId":"208","severity":1,"message":"209","line":57,"column":66,"nodeType":"210","endLine":57,"endColumn":193},{"ruleId":"211","severity":1,"message":"213","line":67,"column":21,"nodeType":"210","endLine":67,"endColumn":60},{"ruleId":"214","severity":1,"message":"215","line":108,"column":25,"nodeType":"216","messageId":"217","endLine":108,"endColumn":30},{"ruleId":"218","severity":1,"message":"219","line":17,"column":13,"nodeType":"220","messageId":"217","endLine":17,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":128,"column":17,"nodeType":"210","endLine":128,"endColumn":119},{"ruleId":"221","severity":1,"message":"222","line":128,"column":88,"nodeType":"223","endLine":128,"endColumn":118},{"ruleId":"211","severity":1,"message":"212","line":215,"column":90,"nodeType":"210","endLine":215,"endColumn":102},{"ruleId":"211","severity":1,"message":"212","line":258,"column":49,"nodeType":"210","endLine":259,"endColumn":184},{"ruleId":"211","severity":1,"message":"212","line":262,"column":49,"nodeType":"210","endLine":262,"endColumn":132},{"ruleId":"211","severity":1,"message":"212","line":146,"column":13,"nodeType":"210","endLine":146,"endColumn":109},{"ruleId":"221","severity":1,"message":"222","line":146,"column":78,"nodeType":"223","endLine":146,"endColumn":108},{"ruleId":"211","severity":1,"message":"212","line":259,"column":86,"nodeType":"210","endLine":259,"endColumn":98},{"ruleId":"211","severity":1,"message":"212","line":310,"column":49,"nodeType":"210","endLine":312,"endColumn":186},{"ruleId":"211","severity":1,"message":"212","line":315,"column":49,"nodeType":"210","endLine":315,"endColumn":130},{"ruleId":"211","severity":1,"message":"212","line":124,"column":17,"nodeType":"210","endLine":124,"endColumn":112},{"ruleId":"221","severity":1,"message":"222","line":124,"column":81,"nodeType":"223","endLine":124,"endColumn":111},{"ruleId":"211","severity":1,"message":"212","line":205,"column":90,"nodeType":"210","endLine":205,"endColumn":102},{"ruleId":"211","severity":1,"message":"212","line":246,"column":49,"nodeType":"210","endLine":247,"endColumn":151},{"ruleId":"211","severity":1,"message":"212","line":250,"column":49,"nodeType":"210","endLine":250,"endColumn":129},{"ruleId":"211","severity":1,"message":"212","line":127,"column":17,"nodeType":"210","endLine":127,"endColumn":112},{"ruleId":"221","severity":1,"message":"222","line":127,"column":81,"nodeType":"223","endLine":127,"endColumn":111},{"ruleId":"211","severity":1,"message":"212","line":213,"column":90,"nodeType":"210","endLine":213,"endColumn":102},{"ruleId":"211","severity":1,"message":"212","line":256,"column":49,"nodeType":"210","endLine":257,"endColumn":204},{"ruleId":"211","severity":1,"message":"212","line":260,"column":49,"nodeType":"210","endLine":260,"endColumn":136},{"ruleId":"204","replacedBy":"224"},{"ruleId":"206","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":19},{"ruleId":"226","severity":1,"message":"230","line":62,"column":63,"nodeType":"228","messageId":"229","endLine":62,"endColumn":76},{"ruleId":"211","severity":1,"message":"212","line":221,"column":102,"nodeType":"210","endLine":221,"endColumn":114},{"ruleId":"211","severity":1,"message":"212","line":271,"column":49,"nodeType":"210","endLine":272,"endColumn":172},{"ruleId":"211","severity":1,"message":"212","line":275,"column":49,"nodeType":"210","endLine":275,"endColumn":132},{"ruleId":"211","severity":1,"message":"212","line":34,"column":17,"nodeType":"210","endLine":34,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":35,"column":17,"nodeType":"210","endLine":35,"endColumn":52},{"ruleId":"208","severity":1,"message":"209","line":123,"column":17,"nodeType":"210","endLine":123,"endColumn":138},{"ruleId":"211","severity":1,"message":"212","line":203,"column":97,"nodeType":"210","endLine":203,"endColumn":109},{"ruleId":"211","severity":1,"message":"212","line":246,"column":49,"nodeType":"210","endLine":247,"endColumn":145},{"ruleId":"211","severity":1,"message":"212","line":250,"column":49,"nodeType":"210","endLine":250,"endColumn":130},{"ruleId":"208","severity":1,"message":"209","line":100,"column":21,"nodeType":"210","endLine":100,"endColumn":134},{"ruleId":"208","severity":1,"message":"209","line":28,"column":21,"nodeType":"210","endLine":28,"endColumn":136},{"ruleId":"211","severity":1,"message":"212","line":43,"column":21,"nodeType":"210","endLine":43,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":44,"column":21,"nodeType":"210","endLine":44,"endColumn":56},{"ruleId":"211","severity":1,"message":"212","line":26,"column":17,"nodeType":"210","endLine":26,"endColumn":121},{"ruleId":"221","severity":1,"message":"222","line":26,"column":90,"nodeType":"223","endLine":26,"endColumn":120},{"ruleId":"211","severity":1,"message":"212","line":44,"column":21,"nodeType":"210","endLine":44,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":45,"column":21,"nodeType":"210","endLine":45,"endColumn":56},{"ruleId":"211","severity":1,"message":"212","line":27,"column":17,"nodeType":"210","endLine":27,"endColumn":118},{"ruleId":"221","severity":1,"message":"222","line":27,"column":90,"nodeType":"223","endLine":27,"endColumn":117},{"ruleId":"211","severity":1,"message":"212","line":43,"column":21,"nodeType":"210","endLine":43,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":44,"column":21,"nodeType":"210","endLine":44,"endColumn":56},{"ruleId":"211","severity":1,"message":"212","line":28,"column":17,"nodeType":"210","endLine":28,"endColumn":132},{"ruleId":"221","severity":1,"message":"222","line":28,"column":90,"nodeType":"223","endLine":28,"endColumn":131},{"ruleId":"211","severity":1,"message":"212","line":45,"column":21,"nodeType":"210","endLine":45,"endColumn":57},{"ruleId":"211","severity":1,"message":"212","line":46,"column":21,"nodeType":"210","endLine":46,"endColumn":56},{"ruleId":"211","severity":1,"message":"212","line":29,"column":13,"nodeType":"210","endLine":29,"endColumn":112},{"ruleId":"221","severity":1,"message":"222","line":29,"column":86,"nodeType":"223","endLine":29,"endColumn":111},{"ruleId":"211","severity":1,"message":"212","line":46,"column":17,"nodeType":"210","endLine":46,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":47,"column":17,"nodeType":"210","endLine":47,"endColumn":52},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-dupe-keys","Duplicate key 'vAxis'.","ObjectExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["231"],["232"],"no-unused-vars","'CityService' is defined but never used.","Identifier","unusedVar","'activatedCity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]